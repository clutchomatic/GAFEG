name: iOS Lib building. 
env:
  ACTIONS_RUNNER_DEBUG: true
  QT_MAC_DIR: ${{ github.workspace }}/qtInstall/Qt/6.4.2/macos 
  QT_IOS_DIR: ${{ github.workspace }}/qtInstall/Qt/6.4.2/ios
  
  WORKSPACE: ${{ github.workspace }}

  APP_REPO_DIR: ${{ github.workspace }}
  APP_PROJECT_DIR: ${{ github.workspace }}/
  APP_BUILD_DIR: ${{ github.workspace }}/build/

permissions:
  contents: write

on:
  push:
    branches:
      - "master"
      - "AppStore"
  pull_request:
    branches:
      - "master"
      - "AppStore"
  workflow_dispatch:

jobs:
  build:
    name: ios libs Build
    runs-on: macos-latest
    steps:
      - name: Environment Dump.
        run: |
          brew install tree
          xcodebuild -version
          node --version
          npm --version
          python3 --version

      - name: Clone App GitHub Repo.
        uses: actions/checkout@v3
        with:
          repository: eyeguide/focus
          token: ${{ secrets.APP_REPO_TOKEN }}
          path: ${{ env.APP_REPO_DIR }}
          ref: master

      - name: Clone quiver GitHub Repo.
        uses: actions/checkout@v3
        with:
          repository: quiverproject/quiver
          path: ${{ github.workspace }}/Focus/Quiver

      - name: Building boost for ios.
        run: |
          cd $APP_PROJECT_DIR/CMake/
          bash boost.sh --ios-archs 'arm64' -ios --boost-version 1.76.0
          cp -r src/boost_1_76_0/boost ../include/
          cp build/boost/1.76.0/ios/release/build/iphoneos/libboost.a ../lib/ios/

      - name: Install Qt for mac.
        run: |
          python3 -m pip install aqtinstall==3.1.*
          aqt install-qt mac desktop 6.4.2 clang_64 --outputdir ${{ github.workspace }}/qtInstall/Qt

      - name: Install Qt for iOS.
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          py7zrversion: '>=0.20.2'
          version: '6.4.2'
          host: 'mac'
          target: 'ios'
          arch: 'ios'
          dir: '${{ github.workspace }}/qtInstall/'
          modules: 'qtcharts qtconnectivity qthttpserver qtimageformats qtmultimedia qtnetworkauth qtpdf qtpositioning qtremoteobjects qtwebchannel qtwebsockets qtwebview qtquicktimeline qtshadertools'
          archives: 'qttranslations qttools qtsvg qtdeclarative qtbase'

      - name: Building Qt-secret for iOS.
        run: |
          qmake Qt-Secret.pro -r DEFINE+=WITHOUT_GUI CONFIG+=staticlib

      - name: Github Clone Qt-Secret.
        uses: actions/checkout@v3
        with:
          repository: QuasarApp/Qt-Secret # https://github.com/QuasarApp/Qt-Secret
          path: ${{ github.workspace }}/Qt-Secret/

      - name: Building Qt-secret for iOS.
        run: |
          cd ${{ github.workspace }}/Qt-Secret/
          git submodule update --init --recursive
          ${{ github.workspace }}/qtInstall/Qt/6.4.2/ios/bin/qmake -r DEFINE+=WITHOUT_GUI Qt-Secret.pro CONFIG+=staticlib
          make
          ls -la ${{ github.workspace }}/lib/ios/
          sudo rm -rf ${{ github.workspace }}/lib/ios/*so*
          mkdir -p ${{ github.workspace }}/GAFEG/lib/ios/
          cp -rf ${{ github.workspace }}/Qt-Secret/src/build/release/libQt-Secret.a ${{ github.workspace }}/GAFEG/lib/ios/
          cp -rf ${{ github.workspace }}/Qt-Secret/src/mini-gmp/src/build/release/libQtBigInt.a ${{ github.workspace }}/GAFEG/lib/ios/
          ls -la ${{ github.workspace }}/GAFEG/lib/ios/

      - name: Checking in libs for iOS.
        env:
          PAT_TOKEN: ${{ secrets.APP_REPO_TOKEN }}
        run: |
          cd ${{ github.workspace }}/GAFEG
          git config --global user.name "eye-ink"
          git config --global user.email "rjain@cybercraft.llc"
          export GIT_ASKPASS="echo $APP_REPO_TOKEN"
          git status
          git add *
          git commit -m "$(date +'%Y-%m-%d %H:%M:%S') - Build iOS Libs from GitHub Actions Script." "${{ github.workspace }}/GAFEG/lib/iOS/*.a"
          git push origin main
